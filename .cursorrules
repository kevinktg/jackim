# 📚 Research & Document Repository Template - Cursor Rules

## 🎯 Project Overview
This is a template repository for organizing research materials, documents, and media files. It provides automated file organization, web interface, and GitHub Pages deployment.

## 🏗️ Architecture & Structure

### Core Components
- **File Organization Script** (`organize-files.sh`) - Automatically categorizes and renames files
- **Web Interface** (`enhanced-index.html`) - Interactive template with dark mode UI
- **Email Templates** (`email-template.html`) - For sharing research summaries
- **GitHub Pages Integration** - Automatic web deployment

### Directory Structure
```
├── audio/          # Audio files (renamed with audio_ prefix)
├── reports/        # HTML files (email_ for small, website_ for large)
├── documents/      # PDF, DOC, TXT, MD files
├── research/       # Images, data files, research assets
├── assets/         # Additional assets
└── index.html      # Main template page
```

## 🛠️ Development Guidelines

### File Organization Rules
- **Audio Files**: Automatically renamed with `audio_` prefix
- **HTML Files**: Categorized by size (<10KB = email, >10KB = website)
- **Documents**: All PDF, DOC, TXT, MD files go to documents/
- **Research Assets**: Images, data files, CSV, JSON, XML

### Code Standards
- Use **SPARC methodology** (Specification, Pseudocode, Architecture, Refinement, Completion)
- Implement **chain of thought** reasoning before coding
- Follow **dark mode UI** preferences for all interfaces
- Write **concise and educational** code with clear comments

### Script Development
- All scripts should be **cross-platform compatible** (Linux/macOS/Windows)
- Include **error handling** and user feedback
- Use **semantic naming** conventions
- Provide **usage examples** in comments

## 🎨 UI/UX Standards

### Design Principles
- **Dark Mode First**: All interfaces should default to dark theme
- **Glass Morphism**: Use backdrop-filter and transparency effects
- **Responsive Design**: Mobile-first approach
- **Accessibility**: WCAG 2.1 AA compliance

### Color Palette
- Primary: `#667eea` to `#764ba2` (gradient)
- Background: Dark gradients with glass effects
- Text: High contrast white/light colors
- Accents: Purple/blue theme

## 📋 Template Usage Workflow

### For New Research Projects
1. **Extract ZIP files** to root directory
2. **Run organization script**: `./organize-files.sh`
3. **Review categorization** in generated directories
4. **Customize templates** if needed
5. **Deploy to GitHub Pages**

### File Processing Pipeline
```
Input Files → organize-files.sh → Categorized Directories → Web Interface
```

## 🔧 Technical Requirements

### Dependencies
- **Bash/Shell**: For file organization scripts
- **HTML5/CSS3**: For web interface
- **JavaScript**: For interactive features
- **Tailwind CSS**: For styling
- **Chart.js**: For data visualization
- **Font Awesome**: For icons

### Browser Support
- Modern browsers (Chrome, Firefox, Safari, Edge)
- Mobile responsive design
- Progressive Web App capabilities

## 📝 Documentation Standards

### Code Comments
- **Header comments** for all scripts with purpose and usage
- **Inline comments** for complex logic
- **Function documentation** with parameters and return values

### README Requirements
- Clear **Quick Start** section
- **File organization** explanation
- **Usage examples** with commands
- **Supported file types** list
- **GitHub Pages setup** instructions

## 🚀 Deployment & Publishing

### GitHub Pages Integration
- Automatic deployment from main branch
- Custom domain support
- HTTPS enforcement
- SEO optimization

### File Management
- **Version control** for all template files
- **Backup strategy** for research data
- **Archive system** for old projects

## 🔍 Quality Assurance

### Testing Requirements
- **Cross-platform script testing**
- **Browser compatibility testing**
- **File organization accuracy**
- **Web interface responsiveness**

### Performance Standards
- **Fast file processing** (<30 seconds for typical projects)
- **Optimized web assets** (minified CSS/JS)
- **Efficient file categorization** algorithms

## 📚 Best Practices

### Research Organization
- **Consistent naming** conventions
- **Metadata tracking** for research files
- **Version control** for documents
- **Backup and archiving** strategies

### User Experience
- **Intuitive file discovery**
- **Quick access** to common functions
- **Clear visual hierarchy**
- **Helpful error messages**

## 🎯 Success Metrics
- **File organization accuracy**: 95%+
- **User satisfaction** with interface
- **Deployment success rate**: 100%
- **Cross-platform compatibility**: 100%

---

*This template follows SPARC methodology and emphasizes systematic, test-driven development with optimal user experience.*
